<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>